<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>